<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>